<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>